<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>